<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>